<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>